<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>